<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>